<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>